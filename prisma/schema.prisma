// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  id    Int        @id @default(autoincrement())
  role  String
  users UserRole[]
}

model UserRole {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  nik             String     @unique
  initial         String
  password        String
  userRole        UserRole[]
  createdBy       Int
  createdDate     DateTime   @default(now())
  updatedBy       Int?
  updatedAt       DateTime   @updatedAt
  token           String?
  requests        Request[]
  pickedRequests  Request[]  @relation("PickedBy")
  createdRequests Request[]  @relation("CreatedBy")
}

model Request {
  id                     Int           @id @default(autoincrement())
  title                  String
  system                 System        @relation(fields: [systemId], references: [id])
  systemId               Int
  description            String
  status                 RequestStatus @default(OPEN)
  user                   User          @relation(fields: [userId], references: [id])
  userId                 Int
  createdBy              User          @relation("CreatedBy", fields: [createdById], references: [id])
  createdById            Int
  pickedBy               User?         @relation("PickedBy", fields: [pickedById], references: [id])
  pickedById             Int?
  attachments            String?
  resolution             String
  resolution_attachments String?
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
}

model System {
  id       Int       @id @default(autoincrement())
  name     String
  requests Request[]
}

enum RequestStatus {
  OPEN
  IN_PROGRESS
  DONE
  REJECTED
}
